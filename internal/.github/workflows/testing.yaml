name: CI Pipeline

on:
  pull_request:
    type: [ opened, synchronize ]
  push:
    branches: [ main ]

env:
  WANDB_MODE: offline
  ZETTA_USER: test
  ZETTA_PROJECT: test
  PYTHONPATH: /home/runner/work/internal/internal/zetta_utils
  #SETUPTOOLS_ENABLE_FEATURES: legacy-editable

jobs:
  pytest:
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.12"
          - "3.11"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Get token from Github App
        uses: actions/create-github-app-token@v1
        id: app_token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PEM }}
          # owner is required, otherwise the creds will fail the checkout step
          owner: ${{ github.repository_owner }}

      - name: Checkout from GitHub
        uses: actions/checkout@v4
        with:
          lfs: 'false'
          submodules: true
          ssh-key: ${{ secrets.git_ssh_key  }}
          token: ${{ steps.app_token.outputs.token }}

      - name: Get changed files
        id: changed-py-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            **/*.py
      - name: Clean up
        run:  |
          rm -rf /home/runner/work/internal/internal/*

      - name: Checkout zetta_utils
        uses: actions/checkout@v4
        with:
          repository: 'ZettaAI/zetta_utils'
          path: /home/runner/work/internal/internal/zetta_utils
          lfs: 'false'
          submodules: false
          ssh-key: ${{ secrets.git_ssh_key  }}
          token: ${{ steps.app_token.outputs.token }}

      - name: CD to zetta_utils
        run: |
          cd /home/runner/work/internal/internal/zetta_utils
          ls -lah
          cd zetta_utils

      - name: Checkout from GitHub
        uses: actions/checkout@v4
        with:
          path: /home/runner/work/internal/internal/zetta_utils/zetta_utils/internal
          lfs: 'false'
          submodules: true
          ssh-key: ${{ secrets.git_ssh_key  }}
          token: ${{ steps.app_token.outputs.token }}

      - name: Setup Python
        if: ${{ steps.changed-py-files.outputs.any_changed == 'true' }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          cache: 'pip'

      - name: Install libboost
        if: ${{ steps.changed-py-files.outputs.any_changed == 'true' }}
        run: sudo apt install libboost-dev

      - name: Install zetta_utils and internal
        if: ${{ steps.changed-py-files.outputs.any_changed == 'true' }}
        run: |
          cd /home/runner/work/internal/internal/zetta_utils
          pip install -e '.[public,test]' -v
          cd /home/runner/work/internal/internal/zetta_utils/zetta_utils/internal
          pip install -e '.[all]' -v
      - name: Install CUE
        if: ${{ steps.changed-py-files.outputs.any_changed == 'true' }}
        run: go install cuelang.org/go/cmd/cue@v0.6.0
      - name: Run pytest
        if: ${{ steps.changed-py-files.outputs.any_changed == 'true' }}
        run: |
          cd /home/runner/work/internal/internal/zetta_utils/zetta_utils/internal
          ls
          coverage run -m py.test ./tests/


  pylint-isort:
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.12"
          - "3.11"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Get token from Github App
        uses: actions/create-github-app-token@v1
        id: app_token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PEM }}
          # owner is required, otherwise the creds will fail the checkout step
          owner: ${{ github.repository_owner }}
      - name: Checkout from GitHub
        uses: actions/checkout@v4
        with:
          lfs: 'false'
          submodules: true
          ssh-key: ${{ secrets.git_ssh_key  }}
          token: ${{ steps.app_token.outputs.token }}

      - name: Get changed files
        id: changed-py-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            **/*.py
      - name: Clean up
        run:  |
          rm -rf /home/runner/work/internal/internal/*

      - name: Checkout zetta_utils
        uses: actions/checkout@v4
        with:
          repository: 'ZettaAI/zetta_utils'
          path: /home/runner/work/internal/internal/zetta_utils
          lfs: 'false'
          submodules: false
          ssh-key: ${{ secrets.git_ssh_key  }}
          token: ${{ steps.app_token.outputs.token }}

      - name: Checkout zetta_utils
        run: |
          cd /home/runner/work/internal/internal/zetta_utils
          ls -lah
          cd zetta_utils

      - name: Checkout from GitHub
        uses: actions/checkout@v4
        with:
          path: /home/runner/work/internal/internal/zetta_utils/zetta_utils/internal
          lfs: 'false'
          submodules: true
          ssh-key: ${{ secrets.git_ssh_key  }}
          token: ${{ steps.app_token.outputs.token }}



      - name: Setup Python
        if: ${{ steps.changed-py-files.outputs.any_changed == 'true' }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          cache: 'pip'

      - name: Install libboost
        if: ${{ steps.changed-py-files.outputs.any_changed == 'true' }}
        run: sudo apt install libboost-dev

      - name: Install zetta_utils and internal
        if: ${{ steps.changed-py-files.outputs.any_changed == 'true' }}
        run: |
          cd /home/runner/work/internal/internal/zetta_utils
          pip install -e '.[public,test]' -v
          cd /home/runner/work/internal/internal/zetta_utils/zetta_utils/internal
          pip install -e '.[all]' -v

      - name: Run pylint
        if: ${{ steps.changed-py-files.outputs.any_changed == 'true' }}
        run: |
          python -c "import zetta_utils; print (dir(zetta_utils))"
          echo $PYTHONPATH
          cd /home/runner/work/internal/internal/zetta_utils/
          python -m pylint zetta_utils/internal/alignment zetta_utils/internal/segmentation zetta_utils/internal/regimes zetta_utils/internal/tests

      - name: Run isort
        if: ${{ steps.changed-py-files.outputs.any_changed == 'true' }}
        run: |
          cd /home/runner/work/internal/internal/zetta_utils/
          isort --check-only --df --verbose --om --profile  black zetta_utils/internal/alignment zetta_utils/internal/segmentation zetta_utils/internal/regimes zetta_utils/internal/tests
  mypy:
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.12"
          - "3.11"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Get token from Github App
        uses: actions/create-github-app-token@v1
        id: app_token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PEM }}
          # owner is required, otherwise the creds will fail the checkout step
          owner: ${{ github.repository_owner }}
      - name: Checkout from GitHub
        uses: actions/checkout@v4
        with:
          lfs: 'false'
          submodules: true
          ssh-key: ${{ secrets.git_ssh_key  }}
          token: ${{ steps.app_token.outputs.token }}

      - name: Get changed files
        id: changed-py-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            **/*.py

      - name: Clean up
        run:  |
          rm -rf /home/runner/work/internal/internal/*

      - name: Checkout zetta_utils
        uses: actions/checkout@v4
        with:
          repository: 'ZettaAI/zetta_utils'
          path: /home/runner/work/internal/internal/zetta_utils
          lfs: 'false'
          submodules: false
          ssh-key: ${{ secrets.git_ssh_key  }}
          token: ${{ steps.app_token.outputs.token }}

      - name: Checkout zetta_utils
        run: |
          cd /home/runner/work/internal/internal/zetta_utils
          ls -lah
          cd zetta_utils

      - name: Checkout from GitHub
        uses: actions/checkout@v4
        with:
          path: /home/runner/work/internal/internal/zetta_utils/zetta_utils/internal
          lfs: 'false'
          submodules: true
          ssh-key: ${{ secrets.git_ssh_key  }}
          token: ${{ steps.app_token.outputs.token }}

      - name: Setup Python
        if: ${{ steps.changed-py-files.outputs.any_changed == 'true' }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          cache: 'pip'

      - name: Install libboost
        if: ${{ steps.changed-py-files.outputs.any_changed == 'true' }}
        run: sudo apt install libboost-dev

      - name: Install zetta_utils and internal
        if: ${{ steps.changed-py-files.outputs.any_changed == 'true' }}
        run: |
          cd /home/runner/work/internal/internal/zetta_utils
          pip install -e '.[public,test]' -v
          cd /home/runner/work/internal/internal/zetta_utils/zetta_utils/internal
          pip install -e '.[all]' -v

      - name: Run mypy
        if: ${{ steps.changed-py-files.outputs.any_changed == 'true' }}
        run: |
          cd /home/runner/work/internal/internal/zetta_utils
          mypy zetta_utils/internal

  all-checks-test:
    runs-on: ubuntu-20.04
    needs: [mypy, pytest, pylint-isort]
    if: always()
    steps:
      - name: Success
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failure
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
